<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:xaml="using:UWPEnhanced.Xaml"
	xmlns:converters="using:UWPEnhanced.ValueConverters"
    xmlns:controls="using:UWPEnhanced.Controls">



	<Style TargetType="controls:Menu">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:Menu">

					<Grid Name="RootGrid" Background="Transparent" >

						<Grid.Resources>
							<converters:EnumToIntConverter x:Key="EnumToIntConverter"/>
							<converters:OppositeDoubleConverter x:Key="OppositeDoubleConverter"/>

							<x:Double x:Key="ContentOpenTranslateXY">0</x:Double>
							<Duration x:Key="OpenCloseStoryboardDuration">0:0:0.25</Duration>
							<Duration x:Key="MenuInOutStoryboardDuration">0:0:0.25</Duration>
							<CubicEase x:Key="DefaultEasing" EasingMode="EaseInOut"/>

							<!-- Storyboard use to Open the Menu - animate the TranslateTransform of Content to 0 -->
							<Storyboard x:Key="OpenMenuStoryboard">

								<!-- Animation for X -->
								<DoubleAnimation Storyboard.TargetName="ContentPresenterTranslate"
												Storyboard.TargetProperty="X"
												Duration="{StaticResource OpenCloseStoryboardDuration}"
												To="{StaticResource ContentOpenTranslateXY}"
												EasingFunction="{StaticResource DefaultEasing}"/>

								<!-- Animation for Y -->
								<DoubleAnimation Storyboard.TargetName="ContentPresenterTranslate"
												Storyboard.TargetProperty="Y"
												Duration="{StaticResource OpenCloseStoryboardDuration}"
												To="{StaticResource ContentOpenTranslateXY}"
												EasingFunction="{StaticResource DefaultEasing}"/>
												
							</Storyboard>

							<!-- Storyboard use to Open the Menu - animate the TranslateTransform of Content (X or Y) to
								the value determined in CodeBehind -->
							<Storyboard x:Key="CloseMenuStoryboard">

								<!-- Animation for X -->
								<DoubleAnimation Storyboard.TargetName="ContentPresenterTranslate"
												Storyboard.TargetProperty="X"
												Duration="{StaticResource OpenCloseStoryboardDuration}"												
												To="{Binding ContentTranslateTransformX, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
												EasingFunction="{StaticResource DefaultEasing}"/>

								<!-- Animation for Y -->
								<DoubleAnimation Storyboard.TargetName="ContentPresenterTranslate"
												Storyboard.TargetProperty="Y"
												Duration="{StaticResource OpenCloseStoryboardDuration}"
												To="{Binding ContentTranslateTransformY, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												EasingFunction="{StaticResource DefaultEasing}"/>

							</Storyboard>

							<Storyboard x:Key="SlideOutToLeft">
								<DoubleAnimation Storyboard.TargetName="MenuTranslateTransform"
											Storyboard.TargetProperty="X"
											Duration="{StaticResource MenuInOutStoryboardDuration}"
											To="{Binding OpenLength, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource OppositeDoubleConverter}}"
											EasingFunction="{StaticResource DefaultEasing}"/>
							</Storyboard>

							<Storyboard x:Key="SlideInFromLeft">
								<DoubleAnimation Storyboard.TargetName="MenuTranslateTransform"
											Storyboard.TargetProperty="X"
											Duration="{StaticResource MenuInOutStoryboardDuration}"
											To="0"
											From="{Binding OpenLength, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource OppositeDoubleConverter}}"
											EasingFunction="{StaticResource DefaultEasing}"/>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MenuTranslateTransform"
											Storyboard.TargetProperty="Y">
									<DiscreteDoubleKeyFrame Value="0"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>

							<Storyboard x:Key="SlideOutToTop">
								<DoubleAnimation Storyboard.TargetName="MenuTranslateTransform"
											Storyboard.TargetProperty="Y"
											Duration="{StaticResource MenuInOutStoryboardDuration}"
											To="{Binding OpenLength, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource OppositeDoubleConverter}}"
											EasingFunction="{StaticResource DefaultEasing}"/>
							</Storyboard>

							<Storyboard x:Key="SlideInFromTop">
								<DoubleAnimation Storyboard.TargetName="MenuTranslateTransform"
											Storyboard.TargetProperty="Y"
											Duration="{StaticResource MenuInOutStoryboardDuration}"
											To="0"
											From="{Binding OpenLength, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource OppositeDoubleConverter}}"
											EasingFunction="{StaticResource DefaultEasing}"/>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MenuTranslateTransform"
											Storyboard.TargetProperty="X">
									<DiscreteDoubleKeyFrame Value="0"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>

							<Storyboard x:Key="SlideOutToRight">
								<DoubleAnimation Storyboard.TargetName="MenuTranslateTransform"
											Storyboard.TargetProperty="X"
											Duration="{StaticResource MenuInOutStoryboardDuration}"
											To="{Binding OpenLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
											EasingFunction="{StaticResource DefaultEasing}"/>
							</Storyboard>

							<Storyboard x:Key="SlideInFromRight">
								<DoubleAnimation Storyboard.TargetName="MenuTranslateTransform"
											Storyboard.TargetProperty="X"
											Duration="{StaticResource MenuInOutStoryboardDuration}"
											To="0"
											From="{Binding OpenLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
											EasingFunction="{StaticResource DefaultEasing}"/>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MenuTranslateTransform"
											Storyboard.TargetProperty="Y">
									<DiscreteDoubleKeyFrame Value="0"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>

							<Storyboard x:Key="SlideOutToBottom">
								<DoubleAnimation Storyboard.TargetName="MenuTranslateTransform"
											Storyboard.TargetProperty="Y"
											Duration="{StaticResource MenuInOutStoryboardDuration}"
											To="{Binding OpenLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
											EasingFunction="{StaticResource DefaultEasing}"/>
							</Storyboard>

							<Storyboard x:Key="SlideInFromBottom">
								<DoubleAnimation Storyboard.TargetName="MenuTranslateTransform"
											Storyboard.TargetProperty="Y"
											Duration="{StaticResource MenuInOutStoryboardDuration}"
											To="0"
											From="{Binding OpenLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
											EasingFunction="{StaticResource DefaultEasing}"/>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MenuTranslateTransform"
											Storyboard.TargetProperty="X">
									<DiscreteDoubleKeyFrame Value="0"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>

						</Grid.Resources>

						<Grid.RenderTransform>
							<TranslateTransform x:Name="MenuTranslateTransform"/>
						</Grid.RenderTransform>

						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>

						<xaml:VisualManager.VisualSetups>

							<!-- Group for open/closed states. By default the menu is closed - no additional
							setters/animations are required. Opening/Closing is handled by VisualSetup Open -->
							<xaml:VisualSetupGroup Name="StateGroup">

								<xaml:VisualSetupGroup.Triggers>
									<xaml:VisualTransitionCollection>
										<xaml:VisualTransition TransitionTo="Closed">
											<xaml:VisualDataTriggerBool Data="{Binding IsOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												CompareTo="False"/>
										</xaml:VisualTransition>
										<xaml:VisualTransition TransitionTo="Open">
											<xaml:VisualDataTriggerBool Data="{Binding IsOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												CompareTo="True"/>
										</xaml:VisualTransition>
									</xaml:VisualTransitionCollection>
								</xaml:VisualSetupGroup.Triggers>

								<xaml:VisualSetupDynamic x:Name="Open" ID="Open"
									TransitionInStoryboard="{StaticResource OpenMenuStoryboard}"
									TransitionOutStoryboard="{StaticResource CloseMenuStoryboard}"/>

								<xaml:VisualSetupDynamic ID="Closed">
									<xaml:VisualSetupDynamic.TemporarySetters>
										<xaml:TemporaryPropertySetter Target="{Binding ElementName=Content, Mode=TwoWay}" Property="Visibility" Value="Collapsed"/>
									</xaml:VisualSetupDynamic.TemporarySetters>
								</xaml:VisualSetupDynamic>
							</xaml:VisualSetupGroup>

							<xaml:VisualSetupGroup Name="Position">

								<xaml:VisualSetupGroup.Triggers>
									<xaml:VisualTransitionCollection>
										<xaml:VisualTransition TransitionTo="Left">
											<xaml:VisualDataTriggerMenuPosition Data="{Binding Position, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												ComparisonType="Equal" CompareTo="Left"/>
										</xaml:VisualTransition>
										<xaml:VisualTransition TransitionTo="Top">
											<xaml:VisualDataTriggerMenuPosition Data="{Binding Position, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												ComparisonType="Equal" CompareTo="Top"/>
										</xaml:VisualTransition>
										<xaml:VisualTransition TransitionTo="Right">
											<xaml:VisualDataTriggerMenuPosition Data="{Binding Position, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												ComparisonType="Equal" CompareTo="Right"/>
										</xaml:VisualTransition>
										<xaml:VisualTransition TransitionTo="Bottom">
											<xaml:VisualDataTriggerMenuPosition Data="{Binding Position, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												ComparisonType="Equal" CompareTo="Bottom"/>
										</xaml:VisualTransition>

									</xaml:VisualTransitionCollection>
								</xaml:VisualSetupGroup.Triggers>
								
								
								<xaml:VisualSetupCascade ID="Left">
									<xaml:VisualSetupCascade.Setters>
										<xaml:PropertySetter Target="{Binding ElementName=RootGrid, Mode=TwoWay}" Property="HorizontalAlignment" Value="Left"/>
										<xaml:PropertySetter Target="{Binding ElementName=RootGrid, Mode=TwoWay}" Property="VerticalAlignment" Value="Stretch"/>
									</xaml:VisualSetupCascade.Setters>
									<xaml:VisualSetupCascade.TemporarySetters>
										<xaml:TemporaryPropertySetter Target="{Binding ElementName=IconsPresenter, Mode=TwoWay}" Property="Height" Value="NaN"/>
										<xaml:TemporaryPropertySetter Target="{Binding ElementName=Content, Mode=TwoWay}" Property="Height" Value="NaN"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=IconsPresenter, Path=(Grid.Column), Mode=TwoWay}" Value="0"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=Content, Path=(Grid.Column), Mode=TwoWay}" Value="1"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=IconsPresenter, Path=(Grid.RowSpan), Mode=TwoWay}" Value="2"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=Content, Path=(Grid.RowSpan), Mode=TwoWay}" Value="2"/>
									</xaml:VisualSetupCascade.TemporarySetters>

									<xaml:VisualSetupCascade.Cascade>
										<xaml:VisualSetupCascade TransitionInStoryboard="{StaticResource SlideInFromLeft}"
											TransitionOutStoryboard="{StaticResource SlideOutToLeft}"/>
									</xaml:VisualSetupCascade.Cascade>

								</xaml:VisualSetupCascade>

								<xaml:VisualSetupCascade ID="Top">
									<xaml:VisualSetupCascade.Setters>
										<xaml:PropertySetter Target="{Binding ElementName=RootGrid, Mode=TwoWay}" Property="HorizontalAlignment" Value="Stretch"/>
										<xaml:PropertySetter Target="{Binding ElementName=RootGrid, Mode=TwoWay}" Property="VerticalAlignment" Value="Top"/>
									</xaml:VisualSetupCascade.Setters>
									<xaml:VisualSetupCascade.TemporarySetters>
										<xaml:TemporaryPropertySetter Target="{Binding ElementName=IconsPresenter, Mode=TwoWay}" Property="Width" Value="NaN"/>
										<xaml:TemporaryPropertySetter Target="{Binding ElementName=Content, Mode=TwoWay}" Property="Width" Value="NaN"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=IconsPresenter, Path=(Grid.Row), Mode=TwoWay}" Value="0"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=Content, Path=(Grid.Row), Mode=TwoWay}" Value="1"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=IconsPresenter, Path=(Grid.ColumnSpan), Mode=TwoWay}" Value="2"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=Content, Path=(Grid.ColumnSpan), Mode=TwoWay}" Value="2"/>
									</xaml:VisualSetupCascade.TemporarySetters>

									<xaml:VisualSetupCascade.Cascade>
										<xaml:VisualSetupCascade TransitionInStoryboard="{StaticResource SlideInFromTop}"
											TransitionOutStoryboard="{StaticResource SlideOutToTop}"/>
									</xaml:VisualSetupCascade.Cascade>

								</xaml:VisualSetupCascade>

								
								<xaml:VisualSetupCascade ID="Right">
									<xaml:VisualSetupCascade.Setters>
										<xaml:PropertySetter Target="{Binding ElementName=RootGrid, Mode=TwoWay}" Property="HorizontalAlignment" Value="Right"/>
										<xaml:PropertySetter Target="{Binding ElementName=RootGrid, Mode=TwoWay}" Property="VerticalAlignment" Value="Stretch"/>
									</xaml:VisualSetupCascade.Setters>
									<xaml:VisualSetupCascade.TemporarySetters>
										<xaml:TemporaryPropertySetter Target="{Binding ElementName=IconsPresenter, Mode=TwoWay}" Property="Height" Value="NaN"/>
										<xaml:TemporaryPropertySetter Target="{Binding ElementName=Content, Mode=TwoWay}" Property="Height" Value="NaN"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=IconsPresenter, Path=(Grid.Column), Mode=TwoWay}" Value="1"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=Content, Path=(Grid.Column), Mode=TwoWay}" Value="0"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=IconsPresenter, Path=(Grid.RowSpan), Mode=TwoWay}" Value="2"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=Content, Path=(Grid.RowSpan), Mode=TwoWay}" Value="2"/>
									</xaml:VisualSetupCascade.TemporarySetters>

									<xaml:VisualSetupCascade.Cascade>
										<xaml:VisualSetupCascade TransitionInStoryboard="{StaticResource SlideInFromRight}"
											TransitionOutStoryboard="{StaticResource SlideOutToRight}"/>
									</xaml:VisualSetupCascade.Cascade>

								</xaml:VisualSetupCascade>

								<xaml:VisualSetupCascade ID="Bottom">
									<xaml:VisualSetupCascade.Setters>
										<xaml:PropertySetter Target="{Binding ElementName=RootGrid, Mode=TwoWay}" Property="HorizontalAlignment" Value="Stretch"/>
										<xaml:PropertySetter Target="{Binding ElementName=RootGrid, Mode=TwoWay}" Property="VerticalAlignment" Value="Bottom"/>
									</xaml:VisualSetupCascade.Setters>
									<xaml:VisualSetupCascade.TemporarySetters>
										<xaml:TemporaryPropertySetter Target="{Binding ElementName=IconsPresenter, Mode=TwoWay}" Property="Width" Value="NaN"/>
										<xaml:TemporaryPropertySetter Target="{Binding ElementName=Content, Mode=TwoWay}" Property="Width" Value="NaN"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=IconsPresenter, Path=(Grid.Row), Mode=TwoWay}" Value="1"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=Content, Path=(Grid.Row), Mode=TwoWay}" Value="0"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=IconsPresenter, Path=(Grid.ColumnSpan), Mode=TwoWay}" Value="2"/>
										<xaml:TemporaryBindablePropertySetter Property="{Binding ElementName=Content, Path=(Grid.ColumnSpan), Mode=TwoWay}" Value="2"/>
									</xaml:VisualSetupCascade.TemporarySetters>

									<xaml:VisualSetupCascade.Cascade>
										<xaml:VisualSetupCascade TransitionInStoryboard="{StaticResource SlideInFromBottom}"
											TransitionOutStoryboard="{StaticResource SlideOutToBottom}"/>
									</xaml:VisualSetupCascade.Cascade>

								</xaml:VisualSetupCascade>							

							</xaml:VisualSetupGroup>
						</xaml:VisualManager.VisualSetups>

						<Grid Name="Content"
							Background="Pink"	
							Width="{TemplateBinding ContentLength}"
							Height="{TemplateBinding ContentLength}"
							BorderBrush="Green"
							BorderThickness="2">					

							<Grid.RenderTransform>
								<!-- These Bindings make sure that when the Menu position changes and the menu is closed its position
								will be readjusted to stay hidden -->
								<TranslateTransform x:Name="ContentPresenterTranslate"
									X="{Binding ContentTranslateTransformXCorrection, RelativeSource={RelativeSource Mode=TemplatedParent}}"
									Y="{Binding ContentTranslateTransformYCorrection, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
							</Grid.RenderTransform>

						</Grid>

						<Grid Name="IconsPresenter"							
							Background="Red"
							BorderBrush="Blue"
							BorderThickness="2"
							Width="{TemplateBinding IconsPanelLength}"
							Height="{TemplateBinding IconsPanelLength}">
						
						</Grid>

						



					</Grid>


					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


</ResourceDictionary>
