<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:converters="using:UWPEnhanced.ValueConverters"
	xmlns:controls="using:UWPEnhanced.Controls"
	xmlns:local="using:UWPEnhanced.Controls">


	<Style TargetType="local:Graph">
		<Setter Property="PointDiameter" Value="5"/>
		<Setter Property="TitleFontSize" Value="26"/>
		<Setter Property="RoundLabelToDigit" Value="3"/>
		<Setter Property="VerticalAxisLabelsCount" Value="-1"/>
		<Setter Property="HorizontalAxisLabelsCount" Value="-1"/>
		<Setter Property="AutoLabelHorizontalFrequency" Value="100"/>
		<Setter Property="AutoLabelVerticalFrequency" Value="100"/>
		<Setter Property="Background" Value="LightGray"/>
		<Setter Property="DataBackground" Value="White"/>
		<Setter Property="DataForeground" Value="Black"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="Black"/>
		<Setter Property="SIPrefixConfig" Value="Adequate"/>
		<Setter Property="GridlinesBrush" Value="Black"/>
		<Setter Property="GridlineThickness" Value="2"/>
		<Setter Property="InterpolationLineThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:Graph">

					<!-- Root container -->
					<Grid Name="RootGrid"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Padding="10 20 20 10"
						VerticalAlignment="Stretch"
						RowSpacing="20">

						<Grid.RowDefinitions>
							<!-- Graph title -->
							<RowDefinition Height="Auto"/>
							<!-- The rest of the graph -->
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>

						<!--#region Graph title-->

						<!-- Presents title of the graph -->
						<TextBlock Text="{TemplateBinding Title}"
							Visibility="{Binding Title, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={converters:StringToVisibilityMEC}}"
							FontSize="{TemplateBinding TitleFontSize}"
							Foreground="{TemplateBinding Foreground}"
							FontFamily="{TemplateBinding FontFamily}"
							HorizontalAlignment="Center"/>

						<!--#endregion--> 

						<!--#region Rest of the graph-->

						<!-- Contains the rest of the graph -->
						<Grid ColumnSpacing="15"
							RowSpacing="10"
							Grid.Row="1">

							<!--#region Row and column definitions-->

							<Grid.RowDefinitions>
								<!-- Data display -->
								<RowDefinition Height="*"/>
								<!-- Axis labels -->
								<RowDefinition Height="Auto"/>
								<!-- Axis description/unit -->
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>

							<Grid.ColumnDefinitions>
								<!-- Axis description/unit -->
								<ColumnDefinition Width="Auto"/>
								<!-- Axis description -->
								<ColumnDefinition Width="Auto"/>
								<!-- Data display -->
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>

							<!--#endregion-->

							<!--#region Axes descriptions-->

							<!-- Horizontal axis description -->
							<TextBlock Text="{TemplateBinding HorizontalAxisDescription}"
								Visibility="{Binding HorizontalAxisDescription, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={converters:StringToVisibilityMEC}}"
								Foreground="{TemplateBinding Foreground}"
								FontSize="{TemplateBinding FontSize}"
								FontFamily="{TemplateBinding FontFamily}"
								Grid.Row="2"
								Grid.Column="2"
								HorizontalAlignment="Center"/>

							<!-- Vertical axis description -->
							<controls:RotatableControl RotationAngle="90">
								<TextBlock Name="TB"
								Text="{TemplateBinding VerticalAxisDescription}"
								Visibility="{Binding VerticalAxisDescription, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={converters:StringToVisibilityMEC}}"
								Foreground="{TemplateBinding Foreground}"
								FontSize="{TemplateBinding FontSize}"
								FontFamily="{TemplateBinding FontFamily}"
								RenderTransformOrigin="0 0.5"
								UseLayoutRounding="False"/>
							</controls:RotatableControl>

							<!--#endregion-->

							<!--#region Axes labels-->

							<!-- Container for vertical axis labels -->
							<!-- Padding is used to offset the lables for border thickness around the data -->
							<controls:ItemsContainer FlowDirection="BottomToTop"
								Grid.Column="1"
								UniformSpacing="True"
								Margin="0 -8 0 -5"
								Padding="{Binding DataBorderThickness, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={converters:SelectiveThicknessMEC SelectedSides=TopBottom}}"
								ItemsSource="{Binding VerticalAxisLabels, RelativeSource={RelativeSource Mode=TemplatedParent}}">

								<controls:ItemsContainer.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding }"
											HorizontalAlignment="Right"/>
									</DataTemplate>
								</controls:ItemsContainer.ItemTemplate>

							</controls:ItemsContainer>

							<!-- Container for horizontal axis labels -->
							<!-- Padding is used to offset the lables for border thickness around the data -->
							<controls:ItemsContainer Grid.Row="1"
								Padding="{Binding DataBorderThickness, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={converters:SelectiveThicknessMEC SelectedSides=LeftRight}}"
								Grid.Column="2"
								FlowDirection="LeftToRight"
								UniformSpacing="True"
								HorizontalAlignment="Stretch"
								Margin="-4 0 -8 0"
								ItemsSource="{Binding HorizontalAxisLabels, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>

							<!--#endregion-->

							<!--#region Data display-->

							<!-- Contains the core part of the graph -->
							<Grid Grid.Column="2"
								UseLayoutRounding="False"
								Background="{TemplateBinding DataBackground}">

								<!--#region Gridlines-->

								<!-- Contains the gridlines -->
								<Grid Name="GridlineContainer"
									DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
									UseLayoutRounding="False">

									<!-- Vertical gridlines -->
									<controls:ItemsContainer UniformSpacing="True"
										UseAllAvailableSpace="True"
										HorizontalAlignment="Stretch"
										FlowDirection="LeftToRight"
										ItemsSource="{Binding HorizontalAxisLabels}">

										<controls:ItemsContainer.ItemTemplate>
											<DataTemplate>
												<Border VerticalAlignment="Stretch"
													Width="{Binding ElementName=GridlineContainer, Path=DataContext.GridlineThickness}"												
													Background="{Binding ElementName=GridlineContainer, Path=DataContext.GridlinesBrush}"/>
											</DataTemplate>
										</controls:ItemsContainer.ItemTemplate>
								
									</controls:ItemsContainer>

									<!-- Horizontal gridlines -->
									<controls:ItemsContainer UniformSpacing="True"
										UseAllAvailableSpace="True"
										VerticalAlignment="Stretch"
										FlowDirection="TopToBottom"
										ItemsSource="{Binding VerticalAxisLabels}">

										<controls:ItemsContainer.ItemTemplate>
											<DataTemplate>
												<Border HorizontalAlignment="Stretch"
													Height="{Binding ElementName=GridlineContainer, Path=DataContext.GridlineThickness}"
													Background="{Binding ElementName=GridlineContainer, Path=DataContext.GridlinesBrush}"/>
											</DataTemplate>
										</controls:ItemsContainer.ItemTemplate>

									</controls:ItemsContainer>

								</Grid>

								<!--#endregion-->

								<!--#region Data points and interpolation line -->

								<!-- Grid used to measure the available display area, it directly stores the  -->
								<Grid Name="PART_GraphArea"
									Margin="{Binding GridlineThickness, Converter={converters:DoubleToUniformThicknessMEC Multiplier=0.5}}"
									DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}">

									<Grid.Resources>
										<local:DataPointsToPolylinePointsConverter x:Key="DataPointsPolylineConverter"/>
									</Grid.Resources>

									<!-- Interpolation line, margin is used to position the line so that it is closer to data
										point's center. It's wrapped in a Canvas so as not to be clipped when thickness is too big -->
									<Canvas HorizontalAlignment="Left"
										VerticalAlignment="Bottom">
										<Polyline Points="{Binding DataDisplayPoints, Converter={StaticResource DataPointsPolylineConverter}}"
											Stroke="{Binding DataForeground}"
											StrokeThickness="{TemplateBinding InterpolationLineThickness}"									
											StrokeMiterLimit="0"/>
									</Canvas>

									<!-- Presents the data points -->
									<ItemsControl Name="DataPointsContainer"
										ItemsSource="{Binding DataDisplayPoints}"
										Foreground="{TemplateBinding DataForeground}"
										Margin="{Binding PointDiameter, Converter={converters:DoubleToUniformThicknessMEC Multiplier=-0.5, SelectedSides=LeftBottom}}">

										<!-- Use Grid so that by default points are stacked on top of each other and can be positioned
											using the render transform-->
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<Grid />
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>

										<ItemsControl.ItemTemplate>
											<DataTemplate>
												<Ellipse Width="{Binding Path=DataContext.PointDiameter, ElementName=DataPointsContainer}"
													Height="{Binding Path=DataContext.PointDiameter, ElementName=DataPointsContainer}"
													Fill="{Binding ElementName=DataPointsContainer, Path=Foreground}"													
													VerticalAlignment="Bottom"
													HorizontalAlignment="Left">

													<Ellipse.RenderTransform>
														 <!-- Positions the point on the x-y axes --> 
														<TranslateTransform X="{Binding Key}"
															Y="{Binding Value, Converter={converters:ProductMEC Multiplier=-1}}"/>
													</Ellipse.RenderTransform>

												</Ellipse>
											</DataTemplate>
										</ItemsControl.ItemTemplate>

									</ItemsControl>

								</Grid>

								<!--#endregion-->

							</Grid>

							<!--#endregion-->

						</Grid>

						<!--#endregion--> 
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>